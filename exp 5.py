{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "3983ce75",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "error  [[ 0.09063607 -0.95017798  0.18611431]]\n",
      "output  [[0.90936393 0.95017798 0.81388569]]\n",
      "error  [[ 0.08965956 -0.94619049  0.17875036]]\n",
      "output  [[0.91034044 0.94619049 0.82124964]]\n",
      "error  [[ 0.08872643 -0.94159316  0.17213186]]\n",
      "output  [[0.91127357 0.94159316 0.82786814]]\n",
      "error  [[ 0.08783563 -0.93625063  0.16615222]]\n",
      "output  [[0.91216437 0.93625063 0.83384778]]\n",
      "error  [[ 0.08698625 -0.92998889  0.16072471]]\n",
      "output  [[0.91301375 0.92998889 0.83927529]]\n",
      "error  [[ 0.0861775  -0.92258218  0.15577812]]\n",
      "output  [[0.9138225  0.92258218 0.84422188]]\n",
      "error  [[ 0.08540857 -0.91373542  0.15125348]]\n",
      "output  [[0.91459143 0.91373542 0.84874652]]\n",
      "error  [[ 0.08467853 -0.90306072  0.14710143]]\n",
      "output  [[0.91532147 0.90306072 0.85289857]]\n",
      "error  [[ 0.08398607 -0.89004733  0.14328014]]\n",
      "output  [[0.91601393 0.89004733 0.85671986]]\n",
      "error  [[ 0.08332906 -0.87402607  0.13975344]]\n",
      "output  [[0.91667094 0.87402607 0.86024656]]\n",
      "error  [[ 0.08270396 -0.85413471  0.13648909]]\n",
      "output  [[0.91729604 0.85413471 0.86351091]]\n",
      "error  [[ 0.08210481 -0.82930381  0.13345698]]\n",
      "output  [[0.91789519 0.82930381 0.86654302]]\n",
      "error  [[ 0.081522   -0.7983076   0.13062717]]\n",
      "output  [[0.918478   0.7983076  0.86937283]]\n",
      "error  [[ 0.08094109 -0.75996226  0.12796797]]\n",
      "output  [[0.91905891 0.75996226 0.87203203]]\n",
      "error  [[ 0.08034248 -0.71357304  0.1254449 ]]\n",
      "output  [[0.91965752 0.71357304 0.8745551 ]]\n",
      "error  [[ 0.07970397 -0.65963283  0.123022  ]]\n",
      "output  [[0.92029603 0.65963283 0.876978  ]]\n",
      "error  [[ 0.07900719 -0.60044025  0.12066717]]\n",
      "output  [[0.92099281 0.60044025 0.87933283]]\n",
      "error  [[ 0.07824627 -0.53993789  0.11836023]]\n",
      "output  [[0.92175373 0.53993789 0.88163977]]\n",
      "error  [[ 0.07743198 -0.4824254   0.11609786]]\n",
      "output  [[0.92256802 0.4824254  0.88390214]]\n",
      "error  [[ 0.0765865  -0.43098469  0.11389003]]\n",
      "output  [[0.9234135  0.43098469 0.88610997]]\n",
      "error  [[ 0.07573338 -0.38684163  0.11175089]]\n",
      "output  [[0.92426662 0.38684163 0.88824911]]\n",
      "error  [[ 0.07489051 -0.34978557  0.1096915 ]]\n",
      "output  [[0.92510949 0.34978557 0.8903085 ]]\n",
      "error  [[ 0.07406868 -0.318908    0.10771746]]\n",
      "output  [[0.92593132 0.318908   0.89228254]]\n",
      "error  [[ 0.07327318 -0.29313455  0.10582976]]\n",
      "output  [[0.92672682 0.29313455 0.89417024]]\n",
      "error  [[ 0.07250581 -0.27147849  0.10402639]]\n",
      "output  [[0.92749419 0.27147849 0.89597361]]\n",
      "error  [[ 0.07176647 -0.25312001  0.1023037 ]]\n",
      "output  [[0.92823353 0.25312001 0.8976963 ]]\n",
      "error  [[ 0.0710541  -0.23740706  0.10065731]]\n",
      "output  [[0.9289459  0.23740706 0.89934269]]\n",
      "error  [[ 0.07036724 -0.22382997  0.09908263]]\n",
      "output  [[0.92963276 0.22382997 0.90091737]]\n",
      "error  [[ 0.06970431 -0.211992    0.09757513]]\n",
      "output  [[0.93029569 0.211992   0.90242487]]\n",
      "error  [[ 0.06906375 -0.20158341  0.0961305 ]]\n",
      "output  [[0.93093625 0.20158341 0.9038695 ]]\n",
      "error  [[ 0.06844407 -0.19236082  0.09474469]]\n",
      "output  [[0.93155593 0.19236082 0.90525531]]\n",
      "error  [[ 0.06784391 -0.18413143  0.09341396]]\n",
      "output  [[0.93215609 0.18413143 0.90658604]]\n",
      "error  [[ 0.06726203 -0.17674107  0.09213485]]\n",
      "output  [[0.93273797 0.17674107 0.90786515]]\n",
      "error  [[ 0.06669729 -0.17006542  0.09090417]]\n",
      "output  [[0.93330271 0.17006542 0.90909583]]\n",
      "error  [[ 0.06614868 -0.16400324  0.08971899]]\n",
      "output  [[0.93385132 0.16400324 0.91028101]]\n",
      "error  [[ 0.06561526 -0.15847141  0.0885766 ]]\n",
      "output  [[0.93438474 0.15847141 0.9114234 ]]\n",
      "error  [[ 0.06509617 -0.15340114  0.08747454]]\n",
      "output  [[0.93490383 0.15340114 0.91252546]]\n",
      "error  [[ 0.06459067 -0.14873502  0.08641051]]\n",
      "output  [[0.93540933 0.14873502 0.91358949]]\n",
      "error  [[ 0.06409803 -0.14442479  0.08538239]]\n",
      "output  [[0.93590197 0.14442479 0.91461761]]\n",
      "error  [[ 0.06361761 -0.14042962  0.08438824]]\n",
      "output  [[0.93638239 0.14042962 0.91561176]]\n",
      "error  [[ 0.06314883 -0.13671473  0.08342624]]\n",
      "output  [[0.93685117 0.13671473 0.91657376]]\n",
      "error  [[ 0.06269113 -0.13325033  0.08249472]]\n",
      "output  [[0.93730887 0.13325033 0.91750528]]\n",
      "error  [[ 0.06224402 -0.13001074  0.08159212]]\n",
      "output  [[0.93775598 0.13001074 0.91840788]]\n",
      "error  [[ 0.06180703 -0.1269737   0.08071699]]\n",
      "output  [[0.93819297 0.1269737  0.91928301]]\n",
      "error  [[ 0.06137971 -0.12411986  0.07986799]]\n",
      "output  [[0.93862029 0.12411986 0.92013201]]\n",
      "error  [[ 0.06096168 -0.12143226  0.07904385]]\n",
      "output  [[0.93903832 0.12143226 0.92095615]]\n",
      "error  [[ 0.06055256 -0.11889603  0.07824341]]\n",
      "output  [[0.93944744 0.11889603 0.92175659]]\n",
      "error  [[ 0.06015198 -0.11649803  0.07746556]]\n",
      "output  [[0.93984802 0.11649803 0.92253444]]\n",
      "error  [[ 0.05975963 -0.11422664  0.07670928]]\n",
      "output  [[0.94024037 0.11422664 0.92329072]]\n",
      "error  [[ 0.05937519 -0.11207151  0.07597359]]\n",
      "output  [[0.94062481 0.11207151 0.92402641]]\n",
      "error  [[ 0.00657626 -0.00660291  0.00660005]]\n",
      "output  [[0.99342374 0.00660291 0.99339995]]\n",
      "error  [[ 0.0065757  -0.00660235  0.00659949]]\n",
      "output  [[0.9934243  0.00660235 0.99340051]]\n",
      "error  [[ 0.00657514 -0.00660178  0.00659893]]\n",
      "output  [[0.99342486 0.00660178 0.99340107]]\n",
      "error  [[ 0.00657459 -0.00660121  0.00659836]]\n",
      "output  [[0.99342541 0.00660121 0.99340164]]\n",
      "error  [[ 0.00657403 -0.00660065  0.0065978 ]]\n",
      "output  [[0.99342597 0.00660065 0.9934022 ]]\n",
      "error  [[ 0.00657347 -0.00660008  0.00659724]]\n",
      "output  [[0.99342653 0.00660008 0.99340276]]\n",
      "error  [[ 0.00657292 -0.00659952  0.00659668]]\n",
      "output  [[0.99342708 0.00659952 0.99340332]]\n",
      "error  [[ 0.00657236 -0.00659895  0.00659612]]\n",
      "output  [[0.99342764 0.00659895 0.99340388]]\n",
      "error  [[ 0.00657181 -0.00659839  0.00659555]]\n",
      "output  [[0.99342819 0.00659839 0.99340445]]\n",
      "error  [[ 0.00657125 -0.00659782  0.00659499]]\n",
      "output  [[0.99342875 0.00659782 0.99340501]]\n",
      "error  [[ 0.00657069 -0.00659726  0.00659443]]\n",
      "output  [[0.99342931 0.00659726 0.99340557]]\n",
      "error  [[ 0.00657014 -0.00659669  0.00659387]]\n",
      "output  [[0.99342986 0.00659669 0.99340613]]\n",
      "error  [[ 0.00656958 -0.00659613  0.00659331]]\n",
      "output  [[0.99343042 0.00659613 0.99340669]]\n",
      "error  [[ 0.00656903 -0.00659557  0.00659275]]\n",
      "output  [[0.99343097 0.00659557 0.99340725]]\n",
      "error  [[ 0.00656847 -0.006595    0.00659218]]\n",
      "output  [[0.99343153 0.006595   0.99340782]]\n",
      "error  [[ 0.00656792 -0.00659444  0.00659162]]\n",
      "output  [[0.99343208 0.00659444 0.99340838]]\n",
      "error  [[ 0.00656736 -0.00659387  0.00659106]]\n",
      "output  [[0.99343264 0.00659387 0.99340894]]\n",
      "error  [[ 0.00656681 -0.00659331  0.0065905 ]]\n",
      "output  [[0.99343319 0.00659331 0.9934095 ]]\n",
      "error  [[ 0.00656625 -0.00659275  0.00658994]]\n",
      "output  [[0.99343375 0.00659275 0.99341006]]\n",
      "error  [[ 0.0065657  -0.00659218  0.00658938]]\n",
      "output  [[0.9934343  0.00659218 0.99341062]]\n",
      "error  [[ 0.00656514 -0.00659162  0.00658882]]\n",
      "output  [[0.99343486 0.00659162 0.99341118]]\n",
      "error  [[ 0.00656459 -0.00659106  0.00658826]]\n",
      "output  [[0.99343541 0.00659106 0.99341174]]\n",
      "error  [[ 0.00656403 -0.00659049  0.0065877 ]]\n",
      "output  [[0.99343597 0.00659049 0.9934123 ]]\n",
      "error  [[ 0.00656348 -0.00658993  0.00658714]]\n",
      "output  [[0.99343652 0.00658993 0.99341286]]\n",
      "error  [[ 0.00656293 -0.00658937  0.00658658]]\n",
      "output  [[0.99343707 0.00658937 0.99341342]]\n",
      "error  [[ 0.00656237 -0.00658881  0.00658602]]\n",
      "output  [[0.99343763 0.00658881 0.99341398]]\n",
      "error  [[ 0.00656182 -0.00658824  0.00658546]]\n",
      "output  [[0.99343818 0.00658824 0.99341454]]\n",
      "error  [[ 0.00656127 -0.00658768  0.0065849 ]]\n",
      "output  [[0.99343873 0.00658768 0.9934151 ]]\n",
      "error  [[ 0.00656071 -0.00658712  0.00658434]]\n",
      "output  [[0.99343929 0.00658712 0.99341566]]\n",
      "error  [[ 0.00656016 -0.00658656  0.00658378]]\n",
      "output  [[0.99343984 0.00658656 0.99341622]]\n",
      "error  [[ 0.00655961 -0.006586    0.00658322]]\n",
      "output  [[0.99344039 0.006586   0.99341678]]\n",
      "error  [[ 0.00655905 -0.00658543  0.00658267]]\n",
      "output  [[0.99344095 0.00658543 0.99341733]]\n",
      "error  [[ 0.0065585  -0.00658487  0.00658211]]\n",
      "output  [[0.9934415  0.00658487 0.99341789]]\n",
      "error  [[ 0.00655795 -0.00658431  0.00658155]]\n",
      "output  [[0.99344205 0.00658431 0.99341845]]\n",
      "error  [[ 0.0065574  -0.00658375  0.00658099]]\n",
      "output  [[0.9934426  0.00658375 0.99341901]]\n",
      "error  [[ 0.00655684 -0.00658319  0.00658043]]\n",
      "output  [[0.99344316 0.00658319 0.99341957]]\n",
      "error  [[ 0.00655629 -0.00658263  0.00657987]]\n",
      "output  [[0.99344371 0.00658263 0.99342013]]\n",
      "error  [[ 0.00655574 -0.00658207  0.00657932]]\n",
      "output  [[0.99344426 0.00658207 0.99342068]]\n",
      "error  [[ 0.00655519 -0.00658151  0.00657876]]\n",
      "output  [[0.99344481 0.00658151 0.99342124]]\n",
      "error  [[ 0.00655463 -0.00658095  0.0065782 ]]\n",
      "output  [[0.99344537 0.00658095 0.9934218 ]]\n",
      "error  [[ 0.00655408 -0.00658039  0.00657764]]\n",
      "output  [[0.99344592 0.00658039 0.99342236]]\n",
      "error  [[ 0.00655353 -0.00657983  0.00657709]]\n",
      "output  [[0.99344647 0.00657983 0.99342291]]\n",
      "error  [[ 0.00655298 -0.00657927  0.00657653]]\n",
      "output  [[0.99344702 0.00657927 0.99342347]]\n",
      "error  [[ 0.00655243 -0.00657871  0.00657597]]\n",
      "output  [[0.99344757 0.00657871 0.99342403]]\n",
      "error  [[ 0.00655188 -0.00657815  0.00657541]]\n",
      "output  [[0.99344812 0.00657815 0.99342459]]\n",
      "error  [[ 0.00655133 -0.00657759  0.00657486]]\n",
      "output  [[0.99344867 0.00657759 0.99342514]]\n",
      "error  [[ 0.00655078 -0.00657703  0.0065743 ]]\n",
      "output  [[0.99344922 0.00657703 0.9934257 ]]\n",
      "error  [[ 0.00655023 -0.00657647  0.00657375]]\n",
      "output  [[0.99344977 0.00657647 0.99342625]]\n",
      "error  [[ 0.00654967 -0.00657591  0.00657319]]\n",
      "output  [[0.99345033 0.00657591 0.99342681]]\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "\n",
    "inpn=2\n",
    "hidln=4\n",
    "outn=3\n",
    "itr=6000\n",
    "\n",
    "inp=np.random.randint(1,5,inpn)\n",
    "out=np.array([1.0,0.0,1.0])\n",
    "hidl=np.random.randint(1,hidln)\n",
    "\n",
    "hidb=np.random.rand(1,hidln)\n",
    "outb=np.random.rand(1,outn)\n",
    "hidw=np.random.rand(inpn,hidln)\n",
    "outw=np.random.rand(hidln,outn)\n",
    "\n",
    "def sigmoid(x):\n",
    "    return 1/(1+np.exp(-x))\n",
    "\n",
    "def gradien(x):\n",
    "    return x*(1-x)\n",
    "\n",
    "for i in range(itr):\n",
    "    \n",
    "    hidl=np.dot(inp,hidw)\n",
    "    hidl=sigmoid(hidl+hidb)    \n",
    "    outl=np.dot(hidl,outw)\n",
    "    outl=sigmoid(outl+outb)\n",
    "    \n",
    "    e=out-outl\n",
    "    goutl=gradien(outl)\n",
    "    eto=goutl*e\n",
    "    eth=gradien(hidl)*np.dot(eto,outw.T)\n",
    "    \n",
    "    ghw=np.dot(inp.reshape(inpn,1),eth.reshape(1,hidln))\n",
    "    gow=np.dot(hidl.reshape(hidln,1),eto.reshape(1,outn))\n",
    "    \n",
    "    hidw+=0.5*ghw\n",
    "    outw+=0.5*gow\n",
    "    \n",
    "    if i<50 or i>itr-50:\n",
    "        print(\"error \",e)\n",
    "        print(\"output \",outl)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "53de4db8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "error:  [[ 0.09585443 -0.95034348]]\n",
      "output:  [[0.90414557 0.95034348]]\n",
      "error:  [[ 0.09446776 -0.94602819]]\n",
      "output:  [[0.90553224 0.94602819]]\n",
      "error:  [[ 0.09313812 -0.94098724]]\n",
      "output:  [[0.90686188 0.94098724]]\n",
      "error:  [[ 0.09186214 -0.93504065]]\n",
      "output:  [[0.90813786 0.93504065]]\n",
      "error:  [[ 0.09063681 -0.92795015]]\n",
      "output:  [[0.90936319 0.92795015]]\n",
      "error:  [[ 0.08945944 -0.91939669]]\n",
      "output:  [[0.91054056 0.91939669]]\n",
      "error:  [[ 0.08832765 -0.90894876]]\n",
      "output:  [[0.91167235 0.90894876]]\n",
      "error:  [[ 0.08723933 -0.89601845]]\n",
      "output:  [[0.91276067 0.89601845]]\n",
      "error:  [[ 0.08619265 -0.8798038 ]]\n",
      "output:  [[0.91380735 0.8798038 ]]\n",
      "error:  [[ 0.08518604 -0.85922152]]\n",
      "output:  [[0.91481396 0.85922152]]\n",
      "error:  [[ 0.08421808 -0.83285331]]\n",
      "output:  [[0.91578192 0.83285331]]\n",
      "error:  [[ 0.08328736 -0.79897505]]\n",
      "output:  [[0.91671264 0.79897505]]\n",
      "error:  [[ 0.08239222 -0.75582615]]\n",
      "output:  [[0.91760778 0.75582615]]\n",
      "error:  [[ 0.08153021 -0.70235714]]\n",
      "output:  [[0.91846979 0.70235714]]\n",
      "error:  [[ 0.08069763 -0.63951683]]\n",
      "output:  [[0.91930237 0.63951683]]\n",
      "error:  [[ 0.07988947 -0.57131237]]\n",
      "output:  [[0.92011053 0.57131237]]\n",
      "error:  [[ 0.07910058 -0.50401474]]\n",
      "output:  [[0.92089942 0.50401474]]\n",
      "error:  [[ 0.07832737 -0.44328459]]\n",
      "output:  [[0.92167263 0.44328459]]\n",
      "error:  [[ 0.07756858 -0.3918745 ]]\n",
      "output:  [[0.92243142 0.3918745 ]]\n",
      "error:  [[ 0.07682444 -0.34978765]]\n",
      "output:  [[0.92317556 0.34978765]]\n",
      "error:  [[ 0.07609566 -0.31567741]]\n",
      "output:  [[0.92390434 0.31567741]]\n",
      "error:  [[ 0.0753828  -0.28792935]]\n",
      "output:  [[0.9246172  0.28792935]]\n",
      "error:  [[ 0.07468613 -0.26512451]]\n",
      "output:  [[0.92531387 0.26512451]]\n",
      "error:  [[ 0.07400565 -0.24614424]]\n",
      "output:  [[0.92599435 0.24614424]]\n",
      "error:  [[ 0.07334117 -0.23014174]]\n",
      "output:  [[0.92665883 0.23014174]]\n",
      "error:  [[ 0.07269238 -0.21648317]]\n",
      "output:  [[0.92730762 0.21648317]]\n",
      "error:  [[ 0.07205889 -0.20469295]]\n",
      "output:  [[0.92794111 0.20469295]]\n",
      "error:  [[ 0.07144027 -0.19441123]]\n",
      "output:  [[0.92855973 0.19441123]]\n",
      "error:  [[ 0.07083608 -0.18536256]]\n",
      "output:  [[0.92916392 0.18536256]]\n",
      "error:  [[ 0.07024586 -0.17733352]]\n",
      "output:  [[0.92975414 0.17733352]]\n",
      "error:  [[ 0.06966914 -0.17015671]]\n",
      "output:  [[0.93033086 0.17015671]]\n",
      "error:  [[ 0.06910548 -0.16369922]]\n",
      "output:  [[0.93089452 0.16369922]]\n",
      "error:  [[ 0.06855445 -0.15785437]]\n",
      "output:  [[0.93144555 0.15785437]]\n",
      "error:  [[ 0.06801561 -0.1525356 ]]\n",
      "output:  [[0.93198439 0.1525356 ]]\n",
      "error:  [[ 0.06748855 -0.147672  ]]\n",
      "output:  [[0.93251145 0.147672  ]]\n",
      "error:  [[ 0.06697287 -0.14320494]]\n",
      "output:  [[0.93302713 0.14320494]]\n",
      "error:  [[ 0.0664682  -0.13908553]]\n",
      "output:  [[0.9335318  0.13908553]]\n",
      "error:  [[ 0.06597418 -0.13527269]]\n",
      "output:  [[0.93402582 0.13527269]]\n",
      "error:  [[ 0.06549043 -0.13173166]]\n",
      "output:  [[0.93450957 0.13173166]]\n",
      "error:  [[ 0.06501664 -0.12843279]]\n",
      "output:  [[0.93498336 0.12843279]]\n",
      "error:  [[ 0.06455248 -0.12535069]]\n",
      "output:  [[0.93544752 0.12535069]]\n",
      "error:  [[ 0.06409763 -0.12246345]]\n",
      "output:  [[0.93590237 0.12246345]]\n",
      "error:  [[ 0.0636518  -0.11975205]]\n",
      "output:  [[0.9363482  0.11975205]]\n",
      "error:  [[ 0.06321471 -0.11719994]]\n",
      "output:  [[0.93678529 0.11719994]]\n",
      "error:  [[ 0.06278608 -0.11479262]]\n",
      "output:  [[0.93721392 0.11479262]]\n",
      "error:  [[ 0.06236566 -0.11251732]]\n",
      "output:  [[0.93763434 0.11251732]]\n",
      "error:  [[ 0.06195318 -0.11036277]]\n",
      "output:  [[0.93804682 0.11036277]]\n",
      "error:  [[ 0.06154841 -0.10831899]]\n",
      "output:  [[0.93845159 0.10831899]]\n",
      "error:  [[ 0.06115112 -0.10637708]]\n",
      "output:  [[0.93884888 0.10637708]]\n",
      "error:  [[ 0.06076109 -0.10452908]]\n",
      "output:  [[0.93923891 0.10452908]]\n",
      "error:  [[ 0.00661124 -0.00663374]]\n",
      "output:  [[0.99338876 0.00663374]]\n",
      "error:  [[ 0.00661068 -0.00663317]]\n",
      "output:  [[0.99338932 0.00663317]]\n",
      "error:  [[ 0.00661012 -0.0066326 ]]\n",
      "output:  [[0.99338988 0.0066326 ]]\n",
      "error:  [[ 0.00660956 -0.00663204]]\n",
      "output:  [[0.99339044 0.00663204]]\n",
      "error:  [[ 0.006609   -0.00663147]]\n",
      "output:  [[0.993391   0.00663147]]\n",
      "error:  [[ 0.00660844 -0.0066309 ]]\n",
      "output:  [[0.99339156 0.0066309 ]]\n",
      "error:  [[ 0.00660788 -0.00663034]]\n",
      "output:  [[0.99339212 0.00663034]]\n",
      "error:  [[ 0.00660733 -0.00662977]]\n",
      "output:  [[0.99339267 0.00662977]]\n",
      "error:  [[ 0.00660677 -0.00662921]]\n",
      "output:  [[0.99339323 0.00662921]]\n",
      "error:  [[ 0.00660621 -0.00662864]]\n",
      "output:  [[0.99339379 0.00662864]]\n",
      "error:  [[ 0.00660565 -0.00662807]]\n",
      "output:  [[0.99339435 0.00662807]]\n",
      "error:  [[ 0.00660509 -0.00662751]]\n",
      "output:  [[0.99339491 0.00662751]]\n",
      "error:  [[ 0.00660453 -0.00662694]]\n",
      "output:  [[0.99339547 0.00662694]]\n",
      "error:  [[ 0.00660397 -0.00662638]]\n",
      "output:  [[0.99339603 0.00662638]]\n",
      "error:  [[ 0.00660341 -0.00662581]]\n",
      "output:  [[0.99339659 0.00662581]]\n",
      "error:  [[ 0.00660286 -0.00662525]]\n",
      "output:  [[0.99339714 0.00662525]]\n",
      "error:  [[ 0.0066023  -0.00662468]]\n",
      "output:  [[0.9933977  0.00662468]]\n",
      "error:  [[ 0.00660174 -0.00662412]]\n",
      "output:  [[0.99339826 0.00662412]]\n",
      "error:  [[ 0.00660118 -0.00662355]]\n",
      "output:  [[0.99339882 0.00662355]]\n",
      "error:  [[ 0.00660062 -0.00662299]]\n",
      "output:  [[0.99339938 0.00662299]]\n",
      "error:  [[ 0.00660007 -0.00662242]]\n",
      "output:  [[0.99339993 0.00662242]]\n",
      "error:  [[ 0.00659951 -0.00662186]]\n",
      "output:  [[0.99340049 0.00662186]]\n",
      "error:  [[ 0.00659895 -0.00662129]]\n",
      "output:  [[0.99340105 0.00662129]]\n",
      "error:  [[ 0.00659839 -0.00662073]]\n",
      "output:  [[0.99340161 0.00662073]]\n",
      "error:  [[ 0.00659784 -0.00662017]]\n",
      "output:  [[0.99340216 0.00662017]]\n",
      "error:  [[ 0.00659728 -0.0066196 ]]\n",
      "output:  [[0.99340272 0.0066196 ]]\n",
      "error:  [[ 0.00659672 -0.00661904]]\n",
      "output:  [[0.99340328 0.00661904]]\n",
      "error:  [[ 0.00659617 -0.00661847]]\n",
      "output:  [[0.99340383 0.00661847]]\n",
      "error:  [[ 0.00659561 -0.00661791]]\n",
      "output:  [[0.99340439 0.00661791]]\n",
      "error:  [[ 0.00659505 -0.00661735]]\n",
      "output:  [[0.99340495 0.00661735]]\n",
      "error:  [[ 0.0065945  -0.00661679]]\n",
      "output:  [[0.9934055  0.00661679]]\n",
      "error:  [[ 0.00659394 -0.00661622]]\n",
      "output:  [[0.99340606 0.00661622]]\n",
      "error:  [[ 0.00659339 -0.00661566]]\n",
      "output:  [[0.99340661 0.00661566]]\n",
      "error:  [[ 0.00659283 -0.0066151 ]]\n",
      "output:  [[0.99340717 0.0066151 ]]\n",
      "error:  [[ 0.00659227 -0.00661453]]\n",
      "output:  [[0.99340773 0.00661453]]\n",
      "error:  [[ 0.00659172 -0.00661397]]\n",
      "output:  [[0.99340828 0.00661397]]\n",
      "error:  [[ 0.00659116 -0.00661341]]\n",
      "output:  [[0.99340884 0.00661341]]\n",
      "error:  [[ 0.00659061 -0.00661285]]\n",
      "output:  [[0.99340939 0.00661285]]\n",
      "error:  [[ 0.00659005 -0.00661229]]\n",
      "output:  [[0.99340995 0.00661229]]\n",
      "error:  [[ 0.0065895  -0.00661172]]\n",
      "output:  [[0.9934105  0.00661172]]\n",
      "error:  [[ 0.00658894 -0.00661116]]\n",
      "output:  [[0.99341106 0.00661116]]\n",
      "error:  [[ 0.00658839 -0.0066106 ]]\n",
      "output:  [[0.99341161 0.0066106 ]]\n",
      "error:  [[ 0.00658783 -0.00661004]]\n",
      "output:  [[0.99341217 0.00661004]]\n",
      "error:  [[ 0.00658728 -0.00660948]]\n",
      "output:  [[0.99341272 0.00660948]]\n",
      "error:  [[ 0.00658673 -0.00660892]]\n",
      "output:  [[0.99341327 0.00660892]]\n",
      "error:  [[ 0.00658617 -0.00660836]]\n",
      "output:  [[0.99341383 0.00660836]]\n",
      "error:  [[ 0.00658562 -0.0066078 ]]\n",
      "output:  [[0.99341438 0.0066078 ]]\n",
      "error:  [[ 0.00658506 -0.00660724]]\n",
      "output:  [[0.99341494 0.00660724]]\n",
      "error:  [[ 0.00658451 -0.00660667]]\n",
      "output:  [[0.99341549 0.00660667]]\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "\n",
    "inpn=2\n",
    "hidln=4\n",
    "outn=2\n",
    "\n",
    "inp=np.random.randint(1,5,inpn)\n",
    "out=np.array([1.0,0.0])\n",
    "hidl=np.random.randint(1,hidln)\n",
    "itr=6000\n",
    "\n",
    "hidb=np.random.rand(1,hidln)\n",
    "outb=np.random.rand(1,outn)\n",
    "hidw=np.random.rand(inpn,hidln)\n",
    "outw=np.random.rand(hidln,outn)\n",
    "\n",
    "def sig(x):\n",
    "    return 1/(1+np.exp(-x))\n",
    "\n",
    "def grad(x):\n",
    "    return x*(1-x)\n",
    "\n",
    "for i in range(itr):\n",
    "    hidl=np.dot(inp,hidw)\n",
    "    hidl=sig(hidl+hidb)\n",
    "    outl=np.dot(hidl,outw)\n",
    "    outl=sig(outl+outb)\n",
    "    \n",
    "    err=out-outl\n",
    "    goutl=grad(outl)\n",
    "    eto=goutl*err\n",
    "    eth=grad(hidl)*np.dot(eto,outl.T)\n",
    "    \n",
    "    ghw=np.dot(inp.reshape(inpn,1),eth.reshape(1,hidln))\n",
    "    gow=np.dot(hidl.reshape(hidln,1),eto.reshape(1,outn))\n",
    "    \n",
    "    hidw+=0.5*ghw\n",
    "    outw+=0.5*gow\n",
    "    \n",
    "    if i<50 or i>itr-50:\n",
    "        print('error: ',err)\n",
    "        print('output: ',outl)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4b15cdd4",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "14a0ea6a",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1e65869e",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9bdabe79",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1a08b59f",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6881ddc7",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "9796e2ee",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "error [[ 0.11921244 -0.90999699]]\n",
      "output [[0.88078756 0.90999699]]\n",
      "error [[ 0.11751975 -0.90075378]]\n",
      "output [[0.88248025 0.90075378]]\n",
      "error [[ 0.11589845 -0.88985949]]\n",
      "output [[0.88410155 0.88985949]]\n",
      "error [[ 0.11433935 -0.87693001]]\n",
      "output [[0.88566065 0.87693001]]\n",
      "error [[ 0.11283224 -0.86148868]]\n",
      "output [[0.88716776 0.86148868]]\n",
      "error [[ 0.11136551 -0.84295627]]\n",
      "output [[0.88863449 0.84295627]]\n",
      "error [[ 0.10992573 -0.82065612]]\n",
      "output [[0.89007427 0.82065612]]\n",
      "error [[ 0.10849759 -0.79385366]]\n",
      "output [[0.89150241 0.79385366]]\n",
      "error [[ 0.10706432 -0.76185948]]\n",
      "output [[0.89293568 0.76185948]]\n",
      "error [[ 0.10560913 -0.72422735]]\n",
      "output [[0.89439087 0.72422735]]\n",
      "error [[ 0.10411819 -0.68104832]]\n",
      "output [[0.89588181 0.68104832]]\n",
      "error [[ 0.10258476 -0.6332546 ]]\n",
      "output [[0.89741524 0.6332546 ]]\n",
      "error [[ 0.10101312 -0.5827271 ]]\n",
      "output [[0.89898688 0.5827271 ]]\n",
      "error [[ 0.09941939 -0.53199569]]\n",
      "output [[0.90058061 0.53199569]]\n",
      "error [[ 0.09782775 -0.48357467]]\n",
      "output [[0.90217225 0.48357467]]\n",
      "error [[ 0.09626338 -0.43930899]]\n",
      "output [[0.90373662 0.43930899]]\n",
      "error [[ 0.09474633 -0.40010326]]\n",
      "output [[0.90525367 0.40010326]]\n",
      "error [[ 0.09328904 -0.36605841]]\n",
      "output [[0.90671096 0.36605841]]\n",
      "error [[ 0.09189701 -0.33678386]]\n",
      "output [[0.90810299 0.33678386]]\n",
      "error [[ 0.09057082 -0.31167825]]\n",
      "output [[0.90942918 0.31167825]]\n",
      "error [[ 0.08930819 -0.29010613]]\n",
      "output [[0.91069181 0.29010613]]\n",
      "error [[ 0.08810538 -0.27148421]]\n",
      "output [[0.91189462 0.27148421]]\n",
      "error [[ 0.08695814 -0.25531175]]\n",
      "output [[0.91304186 0.25531175]]\n",
      "error [[ 0.08586219 -0.24117319]]\n",
      "output [[0.91413781 0.24117319]]\n",
      "error [[ 0.08481348 -0.22872918]]\n",
      "output [[0.91518652 0.22872918]]\n",
      "error [[ 0.08380826 -0.21770435]]\n",
      "output [[0.91619174 0.21770435]]\n",
      "error [[ 0.08284317 -0.20787543]]\n",
      "output [[0.91715683 0.20787543]]\n",
      "error [[ 0.08191517 -0.19906093]]\n",
      "output [[0.91808483 0.19906093]]\n",
      "error [[ 0.08102153 -0.19111259]]\n",
      "output [[0.91897847 0.19111259]]\n",
      "error [[ 0.08015983 -0.18390868]]\n",
      "output [[0.91984017 0.18390868]]\n",
      "error [[ 0.0793279  -0.17734859]]\n",
      "output [[0.9206721  0.17734859]]\n",
      "error [[ 0.07852378 -0.17134865]]\n",
      "output [[0.92147622 0.17134865]]\n",
      "error [[ 0.07774571 -0.16583884]]\n",
      "output [[0.92225429 0.16583884]]\n",
      "error [[ 0.07699209 -0.16076018]]\n",
      "output [[0.92300791 0.16076018]]\n",
      "error [[ 0.0762615  -0.15606273]]\n",
      "output [[0.9237385  0.15606273]]\n",
      "error [[ 0.07555261 -0.15170389]]\n",
      "output [[0.92444739 0.15170389]]\n",
      "error [[ 0.07486424 -0.14764719]]\n",
      "output [[0.92513576 0.14764719]]\n",
      "error [[ 0.07419529 -0.14386119]]\n",
      "output [[0.92580471 0.14386119]]\n",
      "error [[ 0.07354475 -0.14031869]]\n",
      "output [[0.92645525 0.14031869]]\n",
      "error [[ 0.07291171 -0.13699602]]\n",
      "output [[0.92708829 0.13699602]]\n",
      "error [[ 0.0722953  -0.13387249]]\n",
      "output [[0.9277047  0.13387249]]\n",
      "error [[ 0.07169475 -0.13092996]]\n",
      "output [[0.92830525 0.13092996]]\n",
      "error [[ 0.07110931 -0.12815243]]\n",
      "output [[0.92889069 0.12815243]]\n",
      "error [[ 0.07053832 -0.12552577]]\n",
      "output [[0.92946168 0.12552577]]\n",
      "error [[ 0.06998113 -0.12303741]]\n",
      "output [[0.93001887 0.12303741]]\n",
      "error [[ 0.06943715 -0.12067619]]\n",
      "output [[0.93056285 0.12067619]]\n",
      "error [[ 0.06890584 -0.11843209]]\n",
      "output [[0.93109416 0.11843209]]\n",
      "error [[ 0.06838667 -0.11629618]]\n",
      "output [[0.93161333 0.11629618]]\n",
      "error [[ 0.06787915 -0.11426038]]\n",
      "output [[0.93212085 0.11426038]]\n",
      "error [[ 0.06738283 -0.11231745]]\n",
      "output [[0.93261717 0.11231745]]\n",
      "error [[ 0.00677308 -0.00675223]]\n",
      "output [[0.99322692 0.00675223]]\n",
      "error [[ 0.0067725  -0.00675165]]\n",
      "output [[0.9932275  0.00675165]]\n",
      "error [[ 0.00677192 -0.00675106]]\n",
      "output [[0.99322808 0.00675106]]\n",
      "error [[ 0.00677134 -0.00675048]]\n",
      "output [[0.99322866 0.00675048]]\n",
      "error [[ 0.00677076 -0.0067499 ]]\n",
      "output [[0.99322924 0.0067499 ]]\n",
      "error [[ 0.00677018 -0.00674931]]\n",
      "output [[0.99322982 0.00674931]]\n",
      "error [[ 0.0067696  -0.00674873]]\n",
      "output [[0.9932304  0.00674873]]\n",
      "error [[ 0.00676902 -0.00674815]]\n",
      "output [[0.99323098 0.00674815]]\n",
      "error [[ 0.00676844 -0.00674756]]\n",
      "output [[0.99323156 0.00674756]]\n",
      "error [[ 0.00676786 -0.00674698]]\n",
      "output [[0.99323214 0.00674698]]\n",
      "error [[ 0.00676728 -0.0067464 ]]\n",
      "output [[0.99323272 0.0067464 ]]\n",
      "error [[ 0.0067667  -0.00674581]]\n",
      "output [[0.9932333  0.00674581]]\n",
      "error [[ 0.00676612 -0.00674523]]\n",
      "output [[0.99323388 0.00674523]]\n",
      "error [[ 0.00676554 -0.00674465]]\n",
      "output [[0.99323446 0.00674465]]\n",
      "error [[ 0.00676496 -0.00674407]]\n",
      "output [[0.99323504 0.00674407]]\n",
      "error [[ 0.00676438 -0.00674348]]\n",
      "output [[0.99323562 0.00674348]]\n",
      "error [[ 0.0067638 -0.0067429]]\n",
      "output [[0.9932362 0.0067429]]\n",
      "error [[ 0.00676322 -0.00674232]]\n",
      "output [[0.99323678 0.00674232]]\n",
      "error [[ 0.00676264 -0.00674174]]\n",
      "output [[0.99323736 0.00674174]]\n",
      "error [[ 0.00676207 -0.00674116]]\n",
      "output [[0.99323793 0.00674116]]\n",
      "error [[ 0.00676149 -0.00674057]]\n",
      "output [[0.99323851 0.00674057]]\n",
      "error [[ 0.00676091 -0.00673999]]\n",
      "output [[0.99323909 0.00673999]]\n",
      "error [[ 0.00676033 -0.00673941]]\n",
      "output [[0.99323967 0.00673941]]\n",
      "error [[ 0.00675975 -0.00673883]]\n",
      "output [[0.99324025 0.00673883]]\n",
      "error [[ 0.00675918 -0.00673825]]\n",
      "output [[0.99324082 0.00673825]]\n",
      "error [[ 0.0067586  -0.00673767]]\n",
      "output [[0.9932414  0.00673767]]\n",
      "error [[ 0.00675802 -0.00673709]]\n",
      "output [[0.99324198 0.00673709]]\n",
      "error [[ 0.00675744 -0.00673651]]\n",
      "output [[0.99324256 0.00673651]]\n",
      "error [[ 0.00675687 -0.00673593]]\n",
      "output [[0.99324313 0.00673593]]\n",
      "error [[ 0.00675629 -0.00673535]]\n",
      "output [[0.99324371 0.00673535]]\n",
      "error [[ 0.00675571 -0.00673477]]\n",
      "output [[0.99324429 0.00673477]]\n",
      "error [[ 0.00675514 -0.00673419]]\n",
      "output [[0.99324486 0.00673419]]\n",
      "error [[ 0.00675456 -0.00673361]]\n",
      "output [[0.99324544 0.00673361]]\n",
      "error [[ 0.00675398 -0.00673303]]\n",
      "output [[0.99324602 0.00673303]]\n",
      "error [[ 0.00675341 -0.00673245]]\n",
      "output [[0.99324659 0.00673245]]\n",
      "error [[ 0.00675283 -0.00673187]]\n",
      "output [[0.99324717 0.00673187]]\n",
      "error [[ 0.00675226 -0.00673129]]\n",
      "output [[0.99324774 0.00673129]]\n",
      "error [[ 0.00675168 -0.00673071]]\n",
      "output [[0.99324832 0.00673071]]\n",
      "error [[ 0.00675111 -0.00673013]]\n",
      "output [[0.99324889 0.00673013]]\n",
      "error [[ 0.00675053 -0.00672955]]\n",
      "output [[0.99324947 0.00672955]]\n",
      "error [[ 0.00674995 -0.00672897]]\n",
      "output [[0.99325005 0.00672897]]\n",
      "error [[ 0.00674938 -0.0067284 ]]\n",
      "output [[0.99325062 0.0067284 ]]\n",
      "error [[ 0.0067488  -0.00672782]]\n",
      "output [[0.9932512  0.00672782]]\n",
      "error [[ 0.00674823 -0.00672724]]\n",
      "output [[0.99325177 0.00672724]]\n",
      "error [[ 0.00674766 -0.00672666]]\n",
      "output [[0.99325234 0.00672666]]\n",
      "error [[ 0.00674708 -0.00672608]]\n",
      "output [[0.99325292 0.00672608]]\n",
      "error [[ 0.00674651 -0.00672551]]\n",
      "output [[0.99325349 0.00672551]]\n",
      "error [[ 0.00674593 -0.00672493]]\n",
      "output [[0.99325407 0.00672493]]\n",
      "error [[ 0.00674536 -0.00672435]]\n",
      "output [[0.99325464 0.00672435]]\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "\n",
    "inpn=2\n",
    "hidln=4\n",
    "outn=2\n",
    "itr=6000\n",
    "\n",
    "inp=np.random.randint(1,5,inpn)\n",
    "out=[1.0,0.0]\n",
    "hidl=np.random.randint(1,hidln)\n",
    "\n",
    "hidb=np.random.rand(1,hidln)\n",
    "outb=np.random.rand(1,outn)\n",
    "hidw=np.random.rand(inpn,hidln)\n",
    "outw=np.random.rand(hidln,outn)\n",
    "\n",
    "def sigmoid(x):\n",
    "    return 1/(1+np.exp(-x))\n",
    "\n",
    "def grad(x):\n",
    "    return x*(1-x)\n",
    "\n",
    "for i in range(itr):\n",
    "    \n",
    "    hidl=np.dot(inp,hidw)\n",
    "    hidl=sigmoid(hidl+hidb)\n",
    "    outl=np.dot(hidl,outw)\n",
    "    outl=sigmoid(outl+outb)\n",
    "    \n",
    "    e=out-outl\n",
    "    gout=grad(outl)\n",
    "    eto=gout*e\n",
    "    eth=grad(hidl)*np.dot(eto,outw.T)\n",
    "    \n",
    "    ghw=np.dot(inp.reshape(inpn,1),eth.reshape(1,hidln))\n",
    "    gow=np.dot(hidl.reshape(hidln,1),eto.reshape(1,outn))\n",
    "    \n",
    "    hidw+=0.5*ghw\n",
    "    outw+=0.5*gow\n",
    "    \n",
    "    if i<50 or i>itr-50:\n",
    "        print('error',e)\n",
    "        print('output',outl)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7d0b9060",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4938c35d",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "75a71ff7",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9332adff",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3f9fe10d",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "966d872a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "error:  [ 0.09405041 -0.88856775]\n",
      "output:  [0.90594959 0.88856775]\n",
      "error:  [ 0.09307845 -0.87209993]\n",
      "output:  [0.90692155 0.87209993]\n",
      "error:  [ 0.09215537 -0.85158691]\n",
      "output:  [0.90784463 0.85158691]\n",
      "error:  [ 0.09127567 -0.8258937 ]\n",
      "output:  [0.90872433 0.8258937 ]\n",
      "error:  [ 0.09043107 -0.79372585]\n",
      "output:  [0.90956893 0.79372585]\n",
      "error:  [ 0.08960942 -0.75386297]\n",
      "output:  [0.91039058 0.75386297]\n",
      "error:  [ 0.08879416 -0.70567783]\n",
      "output:  [0.91120584 0.70567783]\n",
      "error:  [ 0.08796593 -0.64992   ]\n",
      "output:  [0.91203407 0.64992   ]\n",
      "error:  [ 0.08710745 -0.58932732]\n",
      "output:  [0.91289255 0.58932732]\n",
      "error:  [ 0.08621043 -0.52825444]\n",
      "output:  [0.91378957 0.52825444]\n",
      "error:  [ 0.08527932 -0.47110099]\n",
      "output:  [0.91472068 0.47110099]\n",
      "error:  [ 0.0843281  -0.42069849]\n",
      "output:  [0.9156719  0.42069849]\n",
      "error:  [ 0.08337301 -0.37790212]\n",
      "output:  [0.91662699 0.37790212]\n",
      "error:  [ 0.08242728 -0.34221822]\n",
      "output:  [0.91757272 0.34221822]\n",
      "error:  [ 0.08149965 -0.31259144]\n",
      "output:  [0.91850035 0.31259144]\n",
      "error:  [ 0.08059504 -0.28789751]\n",
      "output:  [0.91940496 0.28789751]\n",
      "error:  [ 0.07971577 -0.26714945]\n",
      "output:  [0.92028423 0.26714945]\n",
      "error:  [ 0.07886259 -0.24954681]\n",
      "output:  [0.92113741 0.24954681]\n",
      "error:  [ 0.07803531 -0.23446175]\n",
      "output:  [0.92196469 0.23446175]\n",
      "error:  [ 0.07723327 -0.22140752]\n",
      "output:  [0.92276673 0.22140752]\n",
      "error:  [ 0.07645556 -0.21000699]\n",
      "output:  [0.92354444 0.21000699]\n",
      "error:  [ 0.07570113 -0.1999665 ]\n",
      "output:  [0.92429887 0.1999665 ]\n",
      "error:  [ 0.07496892 -0.19105556]\n",
      "output:  [0.92503108 0.19105556]\n",
      "error:  [ 0.0742579  -0.18309167]\n",
      "output:  [0.9257421  0.18309167]\n",
      "error:  [ 0.07356705 -0.17592888]\n",
      "output:  [0.92643295 0.17592888]\n",
      "error:  [ 0.07289542 -0.16944937]\n",
      "output:  [0.92710458 0.16944937]\n",
      "error:  [ 0.07224209 -0.16355718]\n",
      "output:  [0.92775791 0.16355718]\n",
      "error:  [ 0.07160621 -0.15817342]\n",
      "output:  [0.92839379 0.15817342]\n",
      "error:  [ 0.07098698 -0.15323271]\n",
      "output:  [0.92901302 0.15323271]\n",
      "error:  [ 0.07038366 -0.14868043]\n",
      "output:  [0.92961634 0.14868043]\n",
      "error:  [ 0.06979554 -0.14447066]\n",
      "output:  [0.93020446 0.14447066]\n",
      "error:  [ 0.06922196 -0.14056444]\n",
      "output:  [0.93077804 0.14056444]\n",
      "error:  [ 0.06866231 -0.13692859]\n",
      "output:  [0.93133769 0.13692859]\n",
      "error:  [ 0.068116   -0.13353464]\n",
      "output:  [0.931884   0.13353464]\n",
      "error:  [ 0.06758249 -0.130358  ]\n",
      "output:  [0.93241751 0.130358  ]\n",
      "error:  [ 0.06706128 -0.12737738]\n",
      "output:  [0.93293872 0.12737738]\n",
      "error:  [ 0.06655186 -0.12457422]\n",
      "output:  [0.93344814 0.12457422]\n",
      "error:  [ 0.0660538  -0.12193224]\n",
      "output:  [0.9339462  0.12193224]\n",
      "error:  [ 0.06556666 -0.11943715]\n",
      "output:  [0.93443334 0.11943715]\n",
      "error:  [ 0.06509004 -0.11707633]\n",
      "output:  [0.93490996 0.11707633]\n",
      "error:  [ 0.06462355 -0.11483859]\n",
      "output:  [0.93537645 0.11483859]\n",
      "error:  [ 0.06416682 -0.11271396]\n",
      "output:  [0.93583318 0.11271396]\n",
      "error:  [ 0.06371951 -0.11069355]\n",
      "output:  [0.93628049 0.11069355]\n",
      "error:  [ 0.0632813  -0.10876941]\n",
      "output:  [0.9367187  0.10876941]\n",
      "error:  [ 0.06285188 -0.10693437]\n",
      "output:  [0.93714812 0.10693437]\n",
      "error:  [ 0.06243094 -0.10518199]\n",
      "output:  [0.93756906 0.10518199]\n",
      "error:  [ 0.0620182  -0.10350645]\n",
      "output:  [0.9379818  0.10350645]\n",
      "error:  [ 0.0616134  -0.10190247]\n",
      "output:  [0.9383866  0.10190247]\n",
      "error:  [ 0.06121629 -0.10036525]\n",
      "output:  [0.93878371 0.10036525]\n",
      "error:  [ 0.06082661 -0.09889043]\n",
      "output:  [0.93917339 0.09889043]\n",
      "error:  [ 0.00664371 -0.00669511]\n",
      "output:  [0.99335629 0.00669511]\n",
      "error:  [ 0.00664315 -0.00669454]\n",
      "output:  [0.99335685 0.00669454]\n",
      "error:  [ 0.00664258 -0.00669396]\n",
      "output:  [0.99335742 0.00669396]\n",
      "error:  [ 0.00664202 -0.00669339]\n",
      "output:  [0.99335798 0.00669339]\n",
      "error:  [ 0.00664145 -0.00669281]\n",
      "output:  [0.99335855 0.00669281]\n",
      "error:  [ 0.00664089 -0.00669224]\n",
      "output:  [0.99335911 0.00669224]\n",
      "error:  [ 0.00664032 -0.00669166]\n",
      "output:  [0.99335968 0.00669166]\n",
      "error:  [ 0.00663976 -0.00669109]\n",
      "output:  [0.99336024 0.00669109]\n",
      "error:  [ 0.0066392  -0.00669051]\n",
      "output:  [0.9933608  0.00669051]\n",
      "error:  [ 0.00663863 -0.00668994]\n",
      "output:  [0.99336137 0.00668994]\n",
      "error:  [ 0.00663807 -0.00668936]\n",
      "output:  [0.99336193 0.00668936]\n",
      "error:  [ 0.00663751 -0.00668879]\n",
      "output:  [0.99336249 0.00668879]\n",
      "error:  [ 0.00663694 -0.00668822]\n",
      "output:  [0.99336306 0.00668822]\n",
      "error:  [ 0.00663638 -0.00668764]\n",
      "output:  [0.99336362 0.00668764]\n",
      "error:  [ 0.00663582 -0.00668707]\n",
      "output:  [0.99336418 0.00668707]\n",
      "error:  [ 0.00663526 -0.0066865 ]\n",
      "output:  [0.99336474 0.0066865 ]\n",
      "error:  [ 0.00663469 -0.00668592]\n",
      "output:  [0.99336531 0.00668592]\n",
      "error:  [ 0.00663413 -0.00668535]\n",
      "output:  [0.99336587 0.00668535]\n",
      "error:  [ 0.00663357 -0.00668478]\n",
      "output:  [0.99336643 0.00668478]\n",
      "error:  [ 0.00663301 -0.0066842 ]\n",
      "output:  [0.99336699 0.0066842 ]\n",
      "error:  [ 0.00663245 -0.00668363]\n",
      "output:  [0.99336755 0.00668363]\n",
      "error:  [ 0.00663188 -0.00668306]\n",
      "output:  [0.99336812 0.00668306]\n",
      "error:  [ 0.00663132 -0.00668248]\n",
      "output:  [0.99336868 0.00668248]\n",
      "error:  [ 0.00663076 -0.00668191]\n",
      "output:  [0.99336924 0.00668191]\n",
      "error:  [ 0.0066302  -0.00668134]\n",
      "output:  [0.9933698  0.00668134]\n",
      "error:  [ 0.00662964 -0.00668077]\n",
      "output:  [0.99337036 0.00668077]\n",
      "error:  [ 0.00662908 -0.0066802 ]\n",
      "output:  [0.99337092 0.0066802 ]\n",
      "error:  [ 0.00662852 -0.00667962]\n",
      "output:  [0.99337148 0.00667962]\n",
      "error:  [ 0.00662796 -0.00667905]\n",
      "output:  [0.99337204 0.00667905]\n",
      "error:  [ 0.0066274  -0.00667848]\n",
      "output:  [0.9933726  0.00667848]\n",
      "error:  [ 0.00662684 -0.00667791]\n",
      "output:  [0.99337316 0.00667791]\n",
      "error:  [ 0.00662627 -0.00667734]\n",
      "output:  [0.99337373 0.00667734]\n",
      "error:  [ 0.00662571 -0.00667677]\n",
      "output:  [0.99337429 0.00667677]\n",
      "error:  [ 0.00662515 -0.0066762 ]\n",
      "output:  [0.99337485 0.0066762 ]\n",
      "error:  [ 0.00662459 -0.00667563]\n",
      "output:  [0.99337541 0.00667563]\n",
      "error:  [ 0.00662403 -0.00667505]\n",
      "output:  [0.99337597 0.00667505]\n",
      "error:  [ 0.00662348 -0.00667448]\n",
      "output:  [0.99337652 0.00667448]\n",
      "error:  [ 0.00662292 -0.00667391]\n",
      "output:  [0.99337708 0.00667391]\n",
      "error:  [ 0.00662236 -0.00667334]\n",
      "output:  [0.99337764 0.00667334]\n",
      "error:  [ 0.0066218  -0.00667277]\n",
      "output:  [0.9933782  0.00667277]\n",
      "error:  [ 0.00662124 -0.0066722 ]\n",
      "output:  [0.99337876 0.0066722 ]\n",
      "error:  [ 0.00662068 -0.00667163]\n",
      "output:  [0.99337932 0.00667163]\n",
      "error:  [ 0.00662012 -0.00667106]\n",
      "output:  [0.99337988 0.00667106]\n",
      "error:  [ 0.00661956 -0.0066705 ]\n",
      "output:  [0.99338044 0.0066705 ]\n",
      "error:  [ 0.006619   -0.00666993]\n",
      "output:  [0.993381   0.00666993]\n",
      "error:  [ 0.00661845 -0.00666936]\n",
      "output:  [0.99338155 0.00666936]\n",
      "error:  [ 0.00661789 -0.00666879]\n",
      "output:  [0.99338211 0.00666879]\n",
      "error:  [ 0.00661733 -0.00666822]\n",
      "output:  [0.99338267 0.00666822]\n",
      "error:  [ 0.00661677 -0.00666765]\n",
      "output:  [0.99338323 0.00666765]\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "\n",
    "inpn=2\n",
    "hidln=4\n",
    "outn=2\n",
    "itr=6000\n",
    "\n",
    "inp=np.random.randint(1,5,inpn)\n",
    "out=[1.0,0.0]\n",
    "hidl=np.random.randint(1,hidln)\n",
    "\n",
    "hidb=np.random.rand(1,hidln)\n",
    "outb=np.random.rand(1,outn)\n",
    "hidw=np.random.rand(inpn,hidln)\n",
    "outw=np.random.rand(hidln,outn)\n",
    "\n",
    "def sig(x):\n",
    "    return 1/(1+np.exp(-x))\n",
    "\n",
    "def grad(x):\n",
    "    return x*(1-x)\n",
    "\n",
    "for i in range(itr):\n",
    "    \n",
    "    hidl=np.dot(inp,hidw)\n",
    "    hidl=sig(hidl)\n",
    "    outl=np.dot(hidl,outw)\n",
    "    outl=sig(outl)\n",
    "    \n",
    "    e=out-outl\n",
    "    gout=grad(outl)\n",
    "    eto=gout*e\n",
    "    eth=grad(hidl)*np.dot(eto,outw.T)\n",
    "    \n",
    "    ghidw=np.dot(inp.reshape(inpn,1),eth.reshape(1,hidln))\n",
    "    goutw=np.dot(hidl.reshape(hidln,1),eto.reshape(1,outn))\n",
    "    \n",
    "    hidw+=0.5*ghidw\n",
    "    outw+=0.5*goutw\n",
    "    \n",
    "    if i<50 or i>itr-50:\n",
    "        print('error: ',e)\n",
    "        print('output: ',outl)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "612470de",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
